{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAmBF,SAASC,cAAc,iBAC1CE,EAAiBH,SAASC,cAAc,mBAK9C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbAN,SAASC,cAAc,SAiB/BY,iBAAiB,UAEtB,SAAkCC,GAChCA,EAAMC,iBACN,IAAIC,EAAaC,OAAOlB,EAAamB,OACrC,MAAMC,EAAYF,OAAOf,EAAiBgB,OACpCE,EAASH,OAAOd,EAAee,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAciB,EAAGL,GACdM,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MAEjBiB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBpB,QAAeC,MAAU,IAEvEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAElBiB,EAAA1B,GAAS2B,OAAOG,QAAQ,oBAAoBtB,QAAeC,MAAU,IAEzEU,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst promiseDelay = document.querySelector('[name=\"delay\"]');\nconst promiseDelayStep = document.querySelector('[name=\"step\"]');\nconst promisesAmount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n// console.log(typeof promiseDelay.value);\n// console.log(promiseDelay);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onCreatePromisesBtnClick);\n\nfunction onCreatePromisesBtnClick(event) {\n  event.preventDefault();\n  let delayValue = Number(promiseDelay.value);\n  const delayStep = Number(promiseDelayStep.value);\n  const amount = Number(promisesAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += delayStep;\n    // console.log(delayValue);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$promiseDelay","document","querySelector","$47d4ff9957288465$var$promiseDelayStep","$47d4ff9957288465$var$promisesAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayValue","Number","value","delayStep","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5baa7ae7.js.map"}